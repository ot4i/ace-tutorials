{"version":3,"sources":["components/ListPanelItem.js","components/TutorialPreview.js","components/Tutorials.js","layouts/LayoutNav.js","Page/TutorialsPage.js","assets/message-flow-v2.svg","Page/WelcomePage.js","Page/TutorialPage.js","App.js","index.js"],"names":["ListPanelItem","name","desc","tags","durationMins","handleLinkClick","hasButtons","handleDetailsActive","handleDetailsClick","tutorialData","baseClass","useState","focus","pointer","active","setActive","itemClasses","setItemClasses","updateItemClasses","newActive","handleActivate","e","newState","type","substr","length","handleDeactivate","className","onFocus","onBlur","onPointerEnter","onPointerLeave","light","handleClick","preview","tabIndex","Fragment","map","tag","Tag","Button","kind","iconDescription","renderIcon","ArrowRight16","size","onClick","tutorialName","preventDefault","stopPropagation","tutorialsPageUrl","window","location","href","tutorialRepoName","stepsURL","split","javaSetSelectedTutorialFunction","alert","message","javaOpenTutorialStepsFunction","startTutorial","TopicsListItems","topics","result","topic","push","ListItem","title","OutcomesListItems","outcomes","outcome","TutorialPreview","downloadCount","tutorial","Object","keys","allTutorials","details","pageDetails","common","_common","summary","shortDescription","durationTime","topicsName","UnorderedList","topicList","outcomesName","outcomeList","overviewName","sections","item","index","section","PageSteps","initiallyOpen","tutorialZipUrl","repoName","tutorialsData","setDownloadCount","tutorialZipUrlArray","zipUrlTutorialName","zipUrlTutorialVersion","zipUrlTutorialFile","downloadCountUrl","setTutorialData","useEffect","fetchTutorialData","fetch","headers","Headers","Accept","method","mode","credentials","response","ok","json","responseData","fetchDownloadCount","assets","download_count","id","fetchedTutorialsData","categories","tutorials","repoMetadataTutorial","find","repoMetadata","stepsUrl","getTutorialData","Tutorials","tutorialBaseClass","tutorialClasses","setTutorialClasses","setTutorialName","selectName","setSelectedTutorial","zipURL","Accordion","ariaAttributes","LayoutNav","children","Header","HeaderName","HeaderMenuItem","navigationLinks","Home20","element","NavLink","to","pathname","Education20","AddComment20","Language20","fetchTutorialsOfVersions","filter","iibVersions","fromValue","parseInt","toValue","TutorialsListItems","search","sort","slice","v12Tutorials","filterRegex","RegExp","list","exec","category","listDom","updatedList","removedItems","splice","concat","_tags","_categories","shortDesc","detailsLink","detailsURL","PromotedTutorial","image","imgSource","process","src","alt","PromotedTutorials","i","tutorialDuration","toLowerCase","includes","filterOptions","label","options","allTagOptions","types","allTags","Set","add","cat","Math","floor","random","value","initFilterOptions","TutorialsPage","route","useHistory","setSearch","panelOpen","setPanelOpen","tutorialDetails","setTutorialDetails","ideNavigationContent","document","getElementsByClassName","handleTutorialClick","style","handleClose","heading","IdeFilter","onChange","val","valMap","join","placeholderText","searchForText","open","onOverlayClose","onClose","console","log","WelcomePage","history","homeConfig","headerOne","headerTwo","headerGraphic","imgSrc","product_graphic","imgAlt","imgClassName","sets","setHeading","tasks","taskId","cardSize","taskHeading","taskHeadingDescription","taskGraphic","Education32","onInteract","AddComment32","cardHref","Language32","TutorialPage","match","params","fetchJsonFile","setTutorialsData","fetchTutorialsData","pageSteps","pageTitle","pageSubTitle","createStep","create","prepareStep","prepare","runStep","run","helpLinkUrl","helpLink","link","helpLinkText","text","onLinkClick","evt","url","javaOpenURLInExternalBrowserFunction","onOpenResource","javaOpenResourceEditorTutorialFunction","localStorage","removeItem","reload","Link","javaBackToGalleryFunction","onBacktoGalleryClick","onHelpLinkClick","AccordionItem","overview","actions","detail","detailIndex","zipUrl","javaImportPIFileFunction","editorResPaths","resourceId","onImportArtifactClick","Download16","sectionIndex","parse","steps","helpLinks","description","OrderedList","substeps","substep","substepIndex","exits","cleanupDescription","tut","tutInfoString","javaGetSelectedTutorialFunction","JSON","undefined","javaUnDeployResourcesFunction","javaDeleteProjectsFromWorkspaceFunction","projects","onCleanUpClick","TrashCan16","App","basename","exact","path","component","from","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6435562e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Tag, ClickableTile } from 'carbon-components-react'\r\nimport { Time16, ArrowRight16 } from '@carbon/icons-react'\r\n\r\nimport './ListPanelItem.scss'\r\n\r\nconst startTutorial = (\r\n  e,\r\n  tutorialName,\r\n  tutorialData\r\n) => {\r\n  e.preventDefault()\r\n  e.stopPropagation()\r\n\r\n  if (tutorialName && tutorialData) {\r\n    const currentWindowHref = window.location.href\r\n    // We'll use the current location to ease testing.\r\n    // Main URL was 'https://ot4i.github.io/ace-tutorials/v12/en/#/./tutorials/'\r\n    const tutorialsPageUrl = currentWindowHref + '/'\r\n\r\n    const repoMetadataTutorial = tutorialData\r\n\r\n    const selectedTutorialUrl = repoMetadataTutorial.stepsURL\r\n    const selectedTutorialUrlSplit = selectedTutorialUrl.split('/')\r\n    const tutorialRepoName = selectedTutorialUrlSplit[9]\r\n\r\n    try {\r\n      window.javaSetSelectedTutorialFunction(tutorialName)\r\n    } catch (e) {\r\n      alert('a java error in javaSetSelectedTutorialFunction occurred: ' + e.message)\r\n    }\r\n\r\n    try {\r\n      window.javaOpenTutorialStepsFunction(tutorialsPageUrl + tutorialRepoName)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenTutorialStepsFunction occurred: ' + e.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport const ListPanelItem = ({\r\n  name,\r\n  desc,\r\n  tags,\r\n  durationMins,\r\n  handleLinkClick,\r\n  handleDetailsActive,\r\n  handleDetailsClick,\r\n  hasButtons,\r\n  tutorialData\r\n}) => {\r\n  const baseClass = 'list-panel-item'\r\n  const [active, setActive] = useState({\r\n    focus: false,\r\n    pointer: false\r\n  })\r\n\r\n  const [itemClasses, setItemClasses] = useState(baseClass)\r\n  const handleClick = (preview) => {\r\n    handleLinkClick(preview === true)\r\n  }\r\n\r\n  const updateItemClasses = (newActive) => {\r\n    setItemClasses(\r\n      newActive.focus || newActive.pointer\r\n        ? `${baseClass} ${baseClass}--active`\r\n        : `${baseClass}`\r\n    )\r\n  }\r\n\r\n  const handleActivate = (e) => {\r\n    const newState = { ...active }\r\n    const type = e.type === 'focus' ? e.type : e.type.substr(0, e.type.length - 5)\r\n    newState[type] = true\r\n    setActive(newState)\r\n    updateItemClasses(newState)\r\n  }\r\n\r\n  const handleDeactivate = (e) => {\r\n    const newState = { ...active }\r\n    const type = e.type === 'blur' ? 'focus' : e.type.substr(0, e.type.length - 5)\r\n    newState[type] = false\r\n    setActive(newState)\r\n    updateItemClasses(newState)\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={itemClasses}\r\n      onFocus={handleActivate}\r\n      onBlur={handleDeactivate}\r\n      onPointerEnter={handleActivate}\r\n      onPointerLeave={handleDeactivate}\r\n    >\r\n      <ClickableTile light handleClick={handleClick} tabIndex='0'>\r\n        <div className='list-panel-item__heading'>\r\n          <h2 className='list-panel-item__title'>{name}</h2>\r\n        </div>\r\n        <p className='list-panel-item__text text--long'>\r\n          {desc}\r\n        </p>\r\n        <div className='list-panel-item__lower'>\r\n          <div className='list-panel-item__lower-left'>\r\n            {\r\n              durationMins && (\r\n                <React.Fragment>\r\n                  <Time16\r\n                    className='list-panel-item__duration-img'\r\n                    aria-label='Timing indicator'\r\n                  />\r\n                  <span className='list-panel-item__duration-text'>\r\n                    {durationMins} minutes\r\n                  </span>\r\n                </React.Fragment>\r\n              )\r\n            }\r\n            {\r\n              tags && tags.map((tag) =>\r\n                <Tag key={tag}>{tag}</Tag>\r\n              )\r\n            }\r\n          </div>\r\n          {\r\n            hasButtons && (\r\n              <Button\r\n                kind='ghost'\r\n                iconDescription='Start tutorial'\r\n                renderIcon={ArrowRight16}\r\n                size='sm'\r\n                onClick={(e) => startTutorial(e, name, tutorialData)}\r\n                className='list-panel-item__start-button'\r\n              >\r\n                Start\r\n              </Button>\r\n            )\r\n          }\r\n        </div>\r\n      </ClickableTile>\r\n    </li>\r\n  )\r\n}\r\n","/*\r\n  Contains code that displays the Overview for a single Tutorial within TutorialsPage\r\n*/\r\n\r\nimport React from 'react'\r\nimport './TutorialPreview.scss'\r\n\r\nimport { UnorderedList, ListItem } from 'carbon-components-react'\r\nimport { Time20, Download20 } from '@carbon/icons-react'\r\nimport allTutorials from '../tutorials_data.json'\r\n\r\nconst TopicsListItems = ({ topics }) => {\r\n  const result = []\r\n\r\n  if (topics && topics.length) {\r\n    for (const topic of topics) {\r\n      result.push(\r\n        <ListItem className='tutorial-preview__' key={topic.title}>\r\n          {topic.title}\r\n        </ListItem>\r\n      )\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst OutcomesListItems = ({ outcomes }) => {\r\n  const result = []\r\n\r\n  if (outcomes && outcomes.length) {\r\n    for (const outcome of outcomes) {\r\n      result.push(\r\n        <ListItem className='tutorial-preview__outcome' key={outcome.title}>\r\n          {outcome.title}\r\n        </ListItem>\r\n      )\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const TutorialPreview = ({ tutorialName, downloadCount, tutorialData }) => {\r\n  const tutorialDataLength = tutorialData && Object.keys(tutorialData).length\r\n  const tutorial = tutorialDataLength > 0 ? tutorialData : allTutorials[tutorialName]\r\n  const details = (tutorial && tutorial.tutorial && tutorial.tutorial.pageDetails) || {}\r\n  const common = (tutorial && tutorial.tutorial && tutorial.tutorial._common) || {}\r\n  const summary = details && details.summary\r\n\r\n  return (\r\n    <div className='tutorial-preview'>\r\n      <div className='tutorial-preview__section'>\r\n        <span />\r\n        <p className='tutorial-preview__text'>{common && common.shortDescription}</p>\r\n      </div>\r\n      <div className='tutorial-preview__section tutorial-preview__section--row tutorial-preview__schedule--container'>\r\n        <div className='tutorial-preview__schedule' title='Estimated tutorial duration time'>\r\n          <Time20 className='tutorial-preview__icon' />\r\n          <p>{common && common.durationTime}.</p>\r\n        </div>\r\n        {\r\n          downloadCount && (\r\n            <div className='tutorial-preview__downloads' title='Number of downloads'>\r\n              <Download20 className='tutorial-preview__icon' />\r\n              <p>{downloadCount}</p>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n      <div className='tutorial-preview__section'>\r\n        <p className='tutorial-preview__text'>{details && details.topicsName}</p>\r\n        <UnorderedList className='tutorial-preview__list'>\r\n          <TopicsListItems topics={details && details.topicList} />\r\n        </UnorderedList>\r\n      </div>\r\n      <div className='tutorial-preview__section'>\r\n        <p className='tutorial-preview__text'>{details && details.outcomesName}</p>\r\n        <UnorderedList className='tutorial-preview__list'>\r\n          <OutcomesListItems outcomes={details && details.outcomeList} />\r\n        </UnorderedList>\r\n      </div>\r\n      <div className='tutorial-preview__section'>\r\n        <p className='tutorial-preview__text-header'>\r\n          {\r\n            summary && summary.overviewName && (\r\n              'Overview'\r\n            )\r\n          }\r\n        </p>\r\n        {\r\n          summary && summary.sections && summary.sections.map((item, index) => (\r\n            <p key={`item-section:${index}`} className='tutorial-preview__text'>\r\n              {item && item.section}\r\n            </p>\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/*\r\nThis javascript file is used by Page/TutorialsPage.js\r\nThis file has the java methods for the Tutorials page\r\nThis file is located within the TutorialsPage and contains code that displays the Details\r\npopup for each Tutorial on the right.\r\n\r\nThe following callback funtions are registered by a toolkit plugin :\r\n\r\n/com.ibm.etools.mft.tutorials/src/com/ibm/etools/mft/tutorials/views/TutorialManager.java\r\n/com.ibm.etools.mft.tutorials/src/com/ibm/etools/mft/tutorials/views/TutorialStepsView.java\r\n\r\nCallback functions:\r\njavaSetSelectedTutorialFunction\r\njavaOpenTutorialStepsFunction\r\n\r\n*/\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Accordion, Button} from 'carbon-components-react'\r\nimport { TutorialPreview } from './TutorialPreview'\r\nimport repoMetadata from '../repo_metadata.json'\r\n\r\nimport './Tutorials.scss'\r\n\r\nconst repoUrl = 'https://ot4i.github.io/'\r\nconst fileUrl = '/v12/en/data.json'\r\nconst githubApiUrl = 'https://api.github.com/repos/ot4i/'\r\n\r\nconst setSelectedTutorial = (selectName) => {\r\n  try {\r\n    window.javaSetSelectedTutorialFunction(selectName)\r\n  } catch (e) {\r\n    alert('a java error in javaSetSelectedTutorialFunction occurred: ' + e.message)\r\n  }\r\n}\r\n\r\nconst getTutorialData = (\r\n  repoMetadataTutorial,\r\n  handleLinkClick\r\n) => {\r\n  const stepsUrl = repoMetadataTutorial.stepsURL\r\n  const tutorialStepsUrl = stepsUrl && stepsUrl.split('/')\r\n  const tutorialName = tutorialStepsUrl[9]\r\n\r\n  handleLinkClick(tutorialName)\r\n}\r\n\r\nconst startTutorial = (\r\n  tutorialName,\r\n  handleLinkClick,\r\n  tutorialsData\r\n) => {\r\n  const currentWindowHref = window.location.href\r\n  // We'll use the current location to ease testing.\r\n  // Main URL was 'https://ot4i.github.io/ace-tutorials/v12/en/#/./tutorials/'\r\n  const tutorialsPageUrl = currentWindowHref + '/'\r\n\r\n  if (tutorialName) {\r\n    const fetchedTutorialsData = tutorialsData && tutorialsData.categories && tutorialsData.categories[0] && tutorialsData.categories[0].tutorials\r\n    const foundTutorialsData = fetchedTutorialsData && fetchedTutorialsData.find(({ name }) => name === tutorialName)\r\n    const repoMetadataTutorial = foundTutorialsData || repoMetadata.categories[0].tutorials.find(({ name }) => name === tutorialName)\r\n    getTutorialData(repoMetadataTutorial, handleLinkClick)\r\n\r\n    const selectedTutorialUrl = repoMetadataTutorial.stepsURL\r\n    const selectedTutorialUrlSplit = selectedTutorialUrl.split('/')\r\n    const tutorialRepoName = selectedTutorialUrlSplit[9]\r\n\r\n    try {\r\n      window.javaOpenTutorialStepsFunction(tutorialsPageUrl + tutorialRepoName)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenTutorialStepsFunction occurred: ' + e.message)\r\n    }\r\n  }\r\n}\r\n\r\n// Main code for the Overview panel that shows up after clicking a Tutorial\r\nconst PageSteps = ({\r\n  preview,\r\n  initiallyOpen,\r\n  handleLinkClick,\r\n  tutorialName,\r\n  tutorialZipUrl,\r\n  repoName,\r\n  tutorialsData\r\n}) => {\r\n  const result = []\r\n\r\n  const [downloadCount, setDownloadCount] = useState(null)\r\n\r\n  const tutorialZipUrlArray = tutorialZipUrl && tutorialZipUrl.split('/')\r\n  const zipUrlTutorialName = tutorialZipUrlArray && tutorialZipUrlArray[4]\r\n  const zipUrlTutorialVersion = tutorialZipUrlArray && tutorialZipUrlArray[7]\r\n  const zipUrlTutorialFile = tutorialZipUrlArray && tutorialZipUrlArray[8]\r\n\r\n  let downloadCountUrl = ''\r\n  if (zipUrlTutorialName && zipUrlTutorialVersion && zipUrlTutorialFile) {\r\n    downloadCountUrl = githubApiUrl + zipUrlTutorialName + '/releases/tags/' + zipUrlTutorialVersion\r\n  }\r\n\r\n  // Fetches latest tutorial data for a single tutorial so that Overview displays\r\n  const [tutorialData, setTutorialData] = useState(null)\r\n  useEffect(() => {\r\n    const fetchTutorialData = async () => {\r\n      if (repoName && (repoName !== '')) {\r\n          const response = await fetch(repoUrl + repoName + fileUrl, {\r\n          headers: new Headers({\r\n            Accept: 'application/vnd.github.v3+json'\r\n          }),\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          credentials: 'omit' // Useful for including session ID (and, IIRC, authorization headers)\r\n        })\r\n\r\n        if (response.ok) {\r\n          const responseData = await response.json()\r\n          setTutorialData(responseData)\r\n        } else {\r\n          setTutorialData({})\r\n        }\r\n      }\r\n    }\r\n    fetchTutorialData()\r\n  },[repoName])\r\n\r\n  // Fetches downloadCount for number of ZIP downloads\r\n  useEffect(() => {\r\n    const fetchDownloadCount = async () => {\r\n      if (downloadCountUrl && (downloadCountUrl !== '')) {\r\n        const response = await fetch(downloadCountUrl, {\r\n          headers: new Headers({\r\n            Accept: 'application/vnd.github.v3+json'\r\n          }),\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          credentials: 'omit' // Useful for including session ID (and, IIRC, authorization headers)\r\n        })\r\n\r\n        const responseData = await response.json()\r\n        if (responseData && responseData.assets[0] && responseData.assets[0].download_count) {\r\n          setDownloadCount(responseData.assets[0].download_count)\r\n        }\r\n      } else {\r\n        setDownloadCount(null)\r\n      }\r\n    }\r\n    fetchDownloadCount()\r\n  },[downloadCountUrl])\r\n\r\n  // Preview is always TRUE for now as this only covers Overview\r\n  if (preview) {\r\n    result.push(\r\n      <li\r\n        className='bx--accordion__item bx--accordion__item--active tutorial-stage tutorial-stage--preview'\r\n        key='Overview-preview'\r\n      >\r\n        <div id='accordion-item-1' className='bx--accordion__content'>\r\n          <TutorialPreview\r\n            tutorialName={tutorialName}\r\n            downloadCount={downloadCount}\r\n            tutorialData={tutorialData}\r\n          />\r\n        </div>\r\n      </li>\r\n    )\r\n\r\n    result.push(\r\n      <li className='bx--accordion__item tutorial-stage' key='tutorial-start'>\r\n        <Button\r\n          className='tutorial-start'\r\n          onClick={() => startTutorial(tutorialName, handleLinkClick, tutorialsData)}\r\n        >\r\n          Start\r\n        </Button>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const Tutorials = ({ name, preview, initiallyOpen, handleLinkClick, tutorialsData }) => {\r\n  const tutorialBaseClass = 'tutorial'\r\n  const [tutorialClasses, setTutorialClasses] = useState('');\r\n  const [tutorialName, setTutorialName] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (preview) {\r\n      setTutorialClasses(`${tutorialBaseClass} ${tutorialBaseClass}--preview`);\r\n    } else {\r\n      setTutorialClasses(`${tutorialBaseClass}`);\r\n    }\r\n    if (name && (name !== '')) {\r\n      setTutorialName(name)\r\n    } else {\r\n      setTutorialName('')\r\n    }\r\n\r\n    setSelectedTutorial(name || '')\r\n  },[preview, name])\r\n\r\n  const fetchedTutorialsData = tutorialsData && tutorialsData.categories && tutorialsData.categories[0] && tutorialsData.categories[0].tutorials\r\n  const foundTutorialsData = fetchedTutorialsData && fetchedTutorialsData.find(({ name }) => name === tutorialName)\r\n  const repoMetadataTutorial = foundTutorialsData || repoMetadata.categories[0].tutorials.find(({ name }) => name === tutorialName)\r\n  const tutorialZipUrl = repoMetadataTutorial && repoMetadataTutorial.zipURL ? repoMetadataTutorial.zipURL : null\r\n  const repoName = repoMetadataTutorial && repoMetadataTutorial.stepsURL && repoMetadataTutorial.stepsURL.split('/')[9]\r\n\r\n  return (\r\n    <div className={tutorialClasses}>\r\n      <main className='tutorial__content'>\r\n        <Accordion>\r\n          <PageSteps\r\n            preview={preview}\r\n            initiallyOpen={initiallyOpen}\r\n            tutorialName={tutorialName}\r\n            handleLinkClick={handleLinkClick}\r\n            tutorialZipUrl={tutorialZipUrl}\r\n            repoName={repoName}\r\n            tutorialsData={tutorialsData}\r\n          />\r\n        </Accordion>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport {\r\n  Header,\r\n  HeaderName,\r\n  HeaderMenuItem,\r\n  HeaderNavigation\r\n} from 'carbon-components-react'\r\n\r\nimport {\r\n  Home20,\r\n  Education20,\r\n  AddComment20,\r\n  Language20\r\n} from '@carbon/icons-react'\r\n\r\nimport { IdeNavigation, IdeSideNavLink } from '@hybrid-cloud/ide-components'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport './LayoutNav.scss'\r\nimport './LayoutGrid.scss'\r\n\r\nconst ariaAttributes = {\r\n  'aria-labelledby': '#myId',\r\n  'aria-label': 'sample aria label to describe the nav'\r\n}\r\n\r\nexport const LayoutNav = ({ children }) => (\r\n  <React.Fragment>\r\n    <Header aria-label='IBM Toolkit'>\r\n      <HeaderName href='#'>\r\n        App Connect&nbsp;<span className='header-highlight'>Enterprise Toolkit</span>\r\n      </HeaderName>\r\n      <HeaderNavigation aria-label='IBM Toolkit'>\r\n        <HeaderMenuItem href='https://org.eclipse.ui.intro/close'>\r\n          Close page\r\n        </HeaderMenuItem>\r\n      </HeaderNavigation>\r\n    </Header>\r\n    <IdeNavigation\r\n      ariaAttributes={ariaAttributes}\r\n      navigationLinks={[\r\n        <IdeSideNavLink\r\n          key={'link-welcome-top-level'}\r\n          renderIcon={Home20}\r\n          element={NavLink}\r\n          href={'/welcome'}\r\n          to={{ pathname: '/welcome' }}\r\n        >\r\n          Welcome\r\n        </IdeSideNavLink>,\r\n        <IdeSideNavLink\r\n          key={'link-tutorials-top-level'}\r\n          renderIcon={Education20}\r\n          element={NavLink}\r\n          href={'/tutorials'}\r\n          to={{ pathname: '/tutorials' }}\r\n        >\r\n          Tutorials\r\n        </IdeSideNavLink>,\r\n        <IdeSideNavLink\r\n          key={'link-whatsnew-top-level'}\r\n          renderIcon={AddComment20}\r\n          href={'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.etools.mft.doc/bb23850_.html'}\r\n          to={{ pathname: 'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.etools.mft.doc/bb23850_.html' }}\r\n        >\r\n          <span>What&apos;s new</span>\r\n        </IdeSideNavLink>,\r\n        <IdeSideNavLink\r\n          key={'link-language-top-level'}\r\n          renderIcon={Language20}\r\n          href={'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.iib.langpacks.doc/bh25997_.htm'}\r\n          to={{ pathname: 'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.iib.langpacks.doc/bh25997_.htm' }}\r\n        >\r\n          <span>Language pack</span>\r\n        </IdeSideNavLink>\r\n      ]}\r\n    >\r\n      <div className='main-content carbon-theme--g10'>\r\n        {children}\r\n      </div>\r\n    </IdeNavigation>\r\n  </React.Fragment>\r\n)\r\n","/*\r\nThis javascript file is for the main tutorials page which lists all the tutorials and has promoted tutoroials at the top of the page.\r\nThe search capability is also in this file. It uses IdeFilter.\r\n*/\r\n\r\nimport 'whatwg-fetch'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  IdePageHeader,\r\n  IdePageContent,\r\n  IdeSlideOverPanel\r\n} from '@hybrid-cloud/ide-components'\r\n// cp4i update\r\nimport { IdeFilter } from '@hybrid-cloud/ide-components/es/components/IdeFilter'\r\nimport { Time16 } from '@carbon/icons-react'\r\nimport { ClickableTile } from 'carbon-components-react'\r\nimport { ListPanelItem } from '../components/ListPanelItem'\r\nimport { Tutorials } from '../components/Tutorials.js'\r\n\r\nimport { LayoutNav } from '../layouts/LayoutNav'\r\n\r\nimport repoMetadata from '../repo_metadata.json'\r\nimport allTutorials from '../tutorials_data.json'\r\n\r\nimport './TutorialsPage.scss'\r\n\r\nconst repoMetadataUrl = 'https://ot4i.github.io/ace-tutorials/v12/en/repo_metadata.json'\r\n// Function that returns tutorials for a specified version\r\n// Setting it to v12 here:\r\nconst versionNumber = 12\r\nconst fetchTutorialsOfVersions = (tutorials) => (\r\n  tutorials.filter(tutorial => {\r\n    const iibVersions = tutorial.iibVersions.split('.*')\r\n    const fromValue = parseInt(iibVersions[0])\r\n    const toValue = parseInt(iibVersions[1] * -1)\r\n    if (versionNumber >= fromValue && versionNumber <= toValue) {\r\n      return tutorial\r\n    }\r\n    return\r\n  })\r\n)\r\n\r\nconst TutorialsListItems = ({ search, sort, handleClick, tutorialsData }) => {\r\n  const tutorials = (tutorialsData && tutorialsData.categories[0].tutorials) || repoMetadata.categories[0].tutorials.slice()\r\n\r\n  // Pass in list of tutorials and version number\r\n  const v12Tutorials = fetchTutorialsOfVersions(tutorials)\r\n\r\n  const filterRegex = new RegExp(search, 'i')\r\n  const filterFunc = (item) => (\r\n    filterRegex.exec(item.name) !== null ||\r\n    filterRegex.exec(item.tags) !== null ||\r\n    filterRegex.exec(item.category) !== null\r\n  )\r\n\r\n  const list = v12Tutorials.filter(filterFunc)\r\n\r\n  const listDom = []\r\n\r\n  let updatedList = list\r\n\r\n  if (!search) {\r\n    let removedItems = list.splice(0, 3)\r\n    updatedList = list.concat(removedItems)\r\n  }\r\n\r\n  for (const item of updatedList) {\r\n    const _tags = (item.tags && item.tags.split(';')) || []\r\n    const _categories = (item.category && item.category.split(',')) || []\r\n\r\n    listDom.push(\r\n      <ListPanelItem\r\n        name={item.name}\r\n        desc={item.shortDesc}\r\n        detailsLink={item.detailsURL}\r\n        tags={_tags.concat(_categories)}\r\n        key={item.name}\r\n        handleLinkClick={(preview) => handleClick(item.name, preview)}\r\n        hasButtons\r\n        tutorialData={item}\r\n      />\r\n    )\r\n  }\r\n\r\n  return listDom\r\n}\r\n\r\nconst PromotedTutorial = ({ name, image, durationMins, handleClick }) => {\r\n  const imgSource = process.env.PUBLIC_URL + '/static_files/' + image + '.svg'\r\n  return (\r\n    <div className='promoted-tutorial__container bx--col-sm-4 bx--col-md-2 bx--col-lg-4 bx--col-xlg-4 bx--col-max-4'>\r\n      <ClickableTile\r\n        handleClick={() => handleClick(name)}\r\n        className='promoted-tutorial__tile'\r\n        tabIndex='0'\r\n      >\r\n        <p className='promoted-tutorial__text'>{name}</p>\r\n        <div className='promoted-tutorial__lower'>\r\n          <img src={imgSource} className='promoted-tutorial__img' alt='Tutorial' />\r\n          <div className='promoted-tutorial__duration'>\r\n            <div className='promoted-tutorial__lower-left'>\r\n              <Time16\r\n                className='promoted-tutorial__duration-img'\r\n                aria-label='Timing indicator'\r\n              />\r\n              <span className='promoted-tutorial__duration-text'>\r\n                {durationMins}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ClickableTile>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PromotedTutorials = ({ handleClick, tutorialsData }) => {\r\n  const list = []\r\n  const tutorials = (tutorialsData && tutorialsData.categories[0].tutorials) || repoMetadata.categories[0].tutorials.slice()\r\n  const v12Tutorials = fetchTutorialsOfVersions(tutorials)\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    const tutorialDuration = allTutorials[v12Tutorials[i].name] && allTutorials[v12Tutorials[i].name].tutorial._common.durationTime\r\n    v12Tutorials[i].durationMins = tutorialDuration\r\n    if (v12Tutorials[i].name.toLowerCase().includes('integration')) {\r\n      v12Tutorials[i].image = 'integration-server'\r\n    } else if (tutorials[i].name.toLowerCase().includes('message')) {\r\n      v12Tutorials[i].image = 'message-flow'\r\n    } else {\r\n      v12Tutorials[i].image = 'rest-api'\r\n    }\r\n    list.push(v12Tutorials[i])\r\n  }\r\n\r\n  const listDom = []\r\n  for (const item of list) {\r\n    listDom.push(\r\n      <PromotedTutorial\r\n        name={item.name}\r\n        image={item.image}\r\n        key={item.name}\r\n        className='promoted-tutorial'\r\n        handleClick={handleClick}\r\n        durationMins={item.durationMins}\r\n      />\r\n    )\r\n  }\r\n\r\n  return listDom\r\n}\r\n\r\nconst filterOptions = [\r\n  {\r\n    label: 'Tags',\r\n    options: []\r\n  }\r\n]\r\n\r\nconst initFilterOptions = () => {\r\n  const v12Tutorials = fetchTutorialsOfVersions(repoMetadata.categories[0].tutorials)\r\n  const allTagOptions = []\r\n  const types = [\r\n    'red',\r\n    'magenta',\r\n    'purple',\r\n    'blue',\r\n    'cyan',\r\n    'teal',\r\n    'green',\r\n    'gray',\r\n    'cool-gray',\r\n    'warm-gray'\r\n  ]\r\n  const allTags = new Set()\r\n\r\n  for (const item of v12Tutorials) {\r\n    const tags = (item.tags && item.tags.split(';')) || []\r\n    const categories = (item.category && item.category.split(',')) || []\r\n\r\n    for (const tag of tags) {\r\n      allTags.add(tag)\r\n    }\r\n\r\n    for (const cat of categories) {\r\n      allTags.add(cat)\r\n    }\r\n  }\r\n\r\n  for (const tag of allTags) {\r\n    allTagOptions.push({\r\n      type: types[Math.floor(Math.random() * types.length)],\r\n      value: tag,\r\n      label: tag\r\n    })\r\n  }\r\n\r\n  filterOptions.push({\r\n    label: 'Tags',\r\n    options: allTagOptions\r\n  })\r\n}\r\ninitFilterOptions()\r\n\r\nexport const TutorialsPage = (route) => {\r\n  const history = useHistory()\r\n  const [search, setSearch] = useState('')\r\n  const [panelOpen, setPanelOpen] = useState(false)\r\n  const [tutorialDetails, setTutorialDetails] = useState({})\r\n  const [preview, setPreview] = useState(true)\r\n\r\n  const ideNavigationContent = document.getElementsByClassName('IdeNavigation--content')\r\n\r\n  const handleStartTutorial = (tutorialName) => {\r\n    console.log(`Link click for '${tutorialName}'`)\r\n    // Uncomment next line for local development, so that we can navigate to a specific tutorial by clicking start\r\n    // history.push(`/tutorials/${tutorialName}${route.location.search}`)\r\n\r\n    // Re-enables scrolling of main content on IE\r\n    ideNavigationContent[0].style['overflow'] = 'auto'\r\n  }\r\n\r\n  // This causes the overview to be shown on the right hand side.\r\n  const handleTutorialClick = (tutorialName) => {\r\n    setPanelOpen(true)\r\n    setTutorialDetails({ title: tutorialName })\r\n\r\n    // Disables scrolling of main content on IE\r\n    ideNavigationContent[0].style['overflow'] = 'hidden'\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setPanelOpen(false)\r\n    setTutorialDetails({})\r\n\r\n    // Re-enables scrolling of main content on IE\r\n    ideNavigationContent[0].style['overflow'] = 'auto'\r\n  }\r\n\r\n  const handleFilterChange = (val) => {\r\n    if (val) {\r\n      const valMap = val.map((item) => item.value)\r\n      setSearch(`((${valMap.join(\")|(\")}))`)\r\n    } else {\r\n      setSearch('')\r\n    }\r\n  }\r\n\r\n  // Fetches latest repo_metadata from public Github\r\n  const [tutorialsData, setTutorialsData] = useState(null)\r\n  useEffect(() => {\r\n    const fetchTutorialsData = async () => {\r\n      const response = await fetch(repoMetadataUrl, {\r\n        headers: new Headers({\r\n          Accept: 'application/vnd.github.v3+json'\r\n        }),\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        credentials: 'omit' // Useful for including session ID (and, IIRC, authorization headers)\r\n      })\r\n\r\n      const responseData = await response.json()\r\n      if (responseData) {\r\n        setTutorialsData(responseData)\r\n      }\r\n    }\r\n    // Uncomment next line if you want to use a local dev version of repo_metadata.json\r\n    // fetchTutorialsData()\r\n  },[])\r\n\r\n  return (\r\n    <LayoutNav>\r\n      <IdePageHeader heading='Tutorials' />\r\n      <IdePageContent>\r\n        <div className='tutorials'>\r\n          <IdeFilter\r\n            options={filterOptions}\r\n            onChange={handleFilterChange}\r\n            placeholderText='What are you looking for today?'\r\n            searchForText='Search for'\r\n          />\r\n          <div className='tutorials-page__section'>\r\n            {\r\n              search.length === 0 && (\r\n                <>\r\n                  <ul className='tutorials__promoted-list'>\r\n                    <PromotedTutorials\r\n                      handleClick={handleTutorialClick}\r\n                      tutorialsData={tutorialsData}\r\n                    />\r\n                  </ul>\r\n                </>\r\n              )\r\n            }\r\n            <ul className='tutorials__list'>\r\n              <TutorialsListItems\r\n                search={search}\r\n                handleClick={handleTutorialClick}\r\n                tutorialsData={tutorialsData}\r\n              />\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </IdePageContent>\r\n      <IdeSlideOverPanel\r\n        open={panelOpen}\r\n        onOverlayClose={handleClose}\r\n        onClose={handleClose}\r\n        size='medium'\r\n        title={tutorialDetails.title}\r\n      >\r\n        <Tutorials\r\n          name={tutorialDetails.title}\r\n          preview={preview}\r\n          handleLinkClick={handleStartTutorial}\r\n          tutorialsData={tutorialsData}\r\n        />\r\n      </IdeSlideOverPanel>\r\n    </LayoutNav>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/message-flow-v2.e2228c74.svg\";","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { IdeHome } from '@hybrid-cloud/ide-components'\r\nimport './WelcomePage.scss'\r\nimport product_graphic from '../assets/message-flow-v2.svg'\r\nimport { Education32, AddComment32, Language32 } from '@carbon/icons-react'\r\nimport { LayoutNav } from '../layouts/LayoutNav'\r\n\r\nexport const WelcomePage = (route) => {\r\n  const history = useHistory()\r\n  const homeConfig = {\r\n    headerOne: 'Welcome to IBM App Connect Enterprise Toolkit',\r\n    headerTwo: 'Integrate your business. Connect your world.',\r\n    headerGraphic: {\r\n      imgSrc: product_graphic,\r\n      imgAlt: 'My image alt text',\r\n      imgClassName: 'ide--home-storybook-header'\r\n    },\r\n    sets: [\r\n      {\r\n        id: 'getting_started',\r\n        setHeading: 'Getting Started',\r\n        tasks: [\r\n          {\r\n            taskId: 'tutorials',\r\n            cardSize: 'standard',\r\n            taskHeading: 'Tutorials',\r\n            taskHeadingDescription: 'Get started quickly using our tutorials',\r\n            taskGraphic: Education32,\r\n            onInteract: (e) => handleClick(e)\r\n          },\r\n          {\r\n            taskId: 'whats-new',\r\n            cardSize: 'standard',\r\n            taskHeading: \"What's new?\",\r\n            taskHeadingDescription: \"See what's new in IBM App Connect Enterprise 12\",\r\n            taskGraphic: AddComment32,\r\n            cardHref: 'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.etools.mft.doc/bb23850_.html'\r\n          },\r\n          {\r\n            taskId: 'language-pack',\r\n            cardSize: 'standard',\r\n            taskHeading: 'Language pack',\r\n            taskHeadingDescription: 'Install a toolkit language pack',\r\n            taskGraphic: Language32,\r\n            cardHref: 'https://org.eclipse.ui.intro/showHelpTopic?id=/com.ibm.iib.langpacks.doc/bh25997_.htm'\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    history.push(`/${e}${route.location.search}`)\r\n  }\r\n\r\n  return (\r\n    <LayoutNav>\r\n      <IdeHome {...homeConfig} />\r\n    </LayoutNav>\r\n  )\r\n}\r\n","/*\r\n\r\nThis is a javascript file that is used for a specific Tutorial\r\n\r\nThe following callback funtions are registered by a toolkit plugin :\r\n\r\n/com.ibm.etools.mft.tutorials/src/com/ibm/etools/mft/tutorials/views/TutorialManager.java\r\n/com.ibm.etools.mft.tutorials/src/com/ibm/etools/mft/tutorials/views/TutorialStepsView.java\r\n\r\nCallback functions:\r\njavaOpenURLInExternalBrowserFunction\r\njavaImportPIFileFunction\r\njavaGetSelectedTutorialFunction\r\njavaUnDeployResourcesFunction\r\njavaDeleteProjectsFromWorkspaceFunction\r\njavaOpenResourceEditorTutorialFunction\r\n\r\n*/\r\n\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n  Button,\r\n  Link,\r\n  Accordion,\r\n  AccordionItem,\r\n  OrderedList,\r\n  UnorderedList,\r\n  ListItem\r\n} from 'carbon-components-react'\r\n\r\nimport { Time16, Download16, TrashCan16 } from '@carbon/icons-react'\r\n\r\nimport parse from 'html-react-parser'\r\n\r\nimport repoMetadata from '../repo_metadata.json'\r\n\r\nimport './TutorialPage.scss'\r\n\r\nconst repoMetadataUrl = 'https://ot4i.github.io/ace-tutorials/v12/en/repo_metadata.json'\r\nconst repoUrl = 'https://ot4i.github.io/'\r\nconst fileUrl = '/v12/en/data.json'\r\n\r\nconst TopicsListItems = ({ topics }) => {\r\n  const result = []\r\n  for (const topic of topics) {\r\n    result.push(\r\n      <ListItem className='tutorial-preview__' key={topic.title}>\r\n        {topic.title}\r\n      </ListItem>\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nconst OutcomesListItems = ({ outcomes }) => {\r\n  const result = []\r\n\r\n  for (const outcome of outcomes) {\r\n    result.push(\r\n      <ListItem className='tutorial-preview__outcome' key={outcome.title}>\r\n        {outcome.title}\r\n      </ListItem>\r\n    )\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const TutorialPage = (route) => {\r\n  const [tutorialData, setTutorialData] = useState(null)\r\n\r\n  const tutorialName = route.match.params.tutorial\r\n\r\n  useEffect(() => {\r\n    const fetchJsonFile = async () => {\r\n      const response = await fetch(repoUrl + tutorialName + fileUrl, {\r\n        headers: new Headers({\r\n          Accept: 'application/vnd.github.v3+json'\r\n        }),\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        credentials: 'omit' // Useful for including session ID (and, IIRC, authorization headers)\r\n      })\r\n      const responseData = await response.json()\r\n\r\n      if (responseData) {\r\n        setTutorialData(responseData)\r\n      }\r\n    }\r\n\r\n    fetchJsonFile()\r\n  },[tutorialName])\r\n\r\n  // Fetches latest repo_metadata from public Github\r\n  const [tutorialsData, setTutorialsData] = useState(null)\r\n  useEffect(() => {\r\n    const fetchTutorialsData = async () => {\r\n      const response = await fetch(repoMetadataUrl, {\r\n        headers: new Headers({\r\n          Accept: 'application/vnd.github.v3+json'\r\n        }),\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        credentials: 'omit' // Useful for including session ID (and, IIRC, authorization headers)\r\n      })\r\n\r\n      const responseData = await response.json()\r\n      if (responseData) {\r\n        setTutorialsData(responseData)\r\n      }\r\n    }\r\n\r\n    // Uncomment next line if you want to use the local copy of repo_metadata.json\r\n    fetchTutorialsData()\r\n  },[])\r\n\r\n  const pageSteps = tutorialData?.tutorial?.pageSteps\r\n  const pageTitle = tutorialData?.tutorial?._common?.name\r\n  const pageSubTitle = tutorialData?.tutorial?._common?.shortDescription\r\n  const createStep = pageSteps?.create\r\n  const prepareStep = pageSteps?.prepare\r\n  const runStep = pageSteps?.run\r\n\r\n  const helpLinkUrl = tutorialData?.tutorial?._common?.helpLink?.link\r\n  const helpLinkText = tutorialData?.tutorial?._common?.helpLink?.text\r\n  const onHelpLinkClick = (e) => {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      window.javaOpenURLInExternalBrowserFunction(helpLinkUrl)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenURLInExternalBrowserFunction occurred: ' + e.message)\r\n    }\r\n  }\r\n\r\n  const onLinkClick = (evt, url) => {\r\n    evt.preventDefault()\r\n\r\n    try {\r\n      window.javaOpenURLInExternalBrowserFunction(url)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenURLInExternalBrowserFunction occurred: ' + e.message)\r\n    }\r\n  }\r\n\r\n  const onImportArtifactClick = (evt, tutorialsData) => {\r\n    evt.preventDefault()\r\n\r\n    const tutorialName = pageTitle\r\n    const fetchedTutorialsData = tutorialsData && tutorialsData.categories && tutorialsData.categories[0] && tutorialsData.categories[0].tutorials\r\n    const foundTutorialsData = fetchedTutorialsData && fetchedTutorialsData.find(({ name }) => name === tutorialName)\r\n    const repoMetadataTutorial = foundTutorialsData || repoMetadata.categories[0].tutorials.find(({ name }) => name === tutorialName)\r\n    const zipUrl = repoMetadataTutorial && repoMetadataTutorial.zipURL\r\n\r\n    try {\r\n      window.javaImportPIFileFunction(tutorialName, zipUrl)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenURLInExternalBrowserFunction occurred: ' + e.message)\r\n    }\r\n\r\n    if (repoMetadataTutorial && repoMetadataTutorial.editorResPaths && repoMetadataTutorial.editorResPaths.length) {\r\n      const resourceId = repoMetadataTutorial.editorResPaths[0].id\r\n      resourceId && onOpenResource(resourceId)\r\n    }\r\n  }\r\n\r\n  const onBacktoGalleryClick = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    try {\r\n      window.javaBackToGalleryFunction()\r\n    } catch (e) {\r\n      alert('a java error in javaBackToGalleryFunction occurred: ' + e.message)\r\n    }\r\n  }\r\n\r\n  const onCleanUpClick = (evt) => {\r\n    evt.preventDefault()\r\n\r\n    let result = null\r\n    let tut = null\r\n\r\n    /*eslint-disable no-undef*/\r\n    try {\r\n      result = javaGetSelectedTutorialFunction()\r\n      let tutInfoString = result[0]\r\n      tut = JSON.parse(tutInfoString)\r\n    } catch (e) {\r\n      alert('a java error in javaGetSelectedTutorialFunction occurred: ' + e.message)\r\n    }\r\n\r\n    if (tut !== undefined) {\r\n      try {\r\n        result = javaUnDeployResourcesFunction()\r\n      } catch (e) {\r\n        alert('a java error in javaUnDeployResourcesFunction occurred: ' + e.message)\r\n      }\r\n\r\n      try {\r\n        result = javaDeleteProjectsFromWorkspaceFunction(tut.projects.split(':'))\r\n      } catch (e) {\r\n        alert('a java error in javaDeleteProjectsFromWorkspaceFunction occurred: ' + e.message)\r\n      }\r\n    }\r\n    /*eslint-enable no-undef*/\r\n  }\r\n\r\n  const onOpenResource = (id) => {\r\n    try {\r\n      window.javaOpenResourceEditorTutorialFunction(id)\r\n    } catch (e) {\r\n      alert('a java error in javaOpenResourceEditorTutorialFunction occurred: ' + e.message)\r\n    }\r\n  }\r\n\r\n  const details = tutorialData?.tutorial?.pageDetails || ''\r\n  const common = tutorialData?.tutorial?._common || ''\r\n  const summary = tutorialData?.tutorial?.pageDetails?.summary || {}\r\n\r\n  if (tutorialData) {\r\n\r\n    // Possible refresh fix for a single tutorial, might fix blank pages issue\r\n    if (tutorialsData && tutorialsData.categories && tutorialsData.categories[0] && tutorialsData.categories[0].tutorials) {\r\n      if (window.localStorage) {\r\n        if (!localStorage['getItem']('firstLoad')) { // AppScan obfuscation\r\n          localStorage['firstLoad'] = true\r\n          window.location.reload()\r\n        } else {\r\n          localStorage.removeItem('firstLoad')\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"tutorial-page__tutorial\">\r\n        <div className='tutorials-page__tutorial--title-container'>\r\n          <h3 className='tutorials-page__tutorial--title'>\r\n            {pageTitle}\r\n          </h3>\r\n          <Link\r\n            href='#'\r\n            onClick={(e) => onBacktoGalleryClick(e)}\r\n            className='tutorials-page__tutorial--title-link'\r\n          >\r\n            Back to gallery\r\n          </Link>\r\n        </div>\r\n        <hr className='tutorials-page__tutorial--hr' />\r\n        <div className='tutorials-page__tutorial--content-container'>\r\n          <div className='tutorials-page__tutorial--subtitle-container'>\r\n            <p className='tutorials-page__tutorial--subtitle'>\r\n              {pageSubTitle}\r\n            </p>\r\n            <Link\r\n              href='#'\r\n              onClick={(e) => onHelpLinkClick(e)}\r\n              className='tutorials-page__tutorial--subtitle-link'\r\n            >\r\n              {helpLinkText}\r\n            </Link>\r\n          </div>\r\n          <br />\r\n          <Accordion size='xl'>\r\n\r\n            {/*\r\n              Overview Step\r\n            */}\r\n            <AccordionItem\r\n              title='Overview'\r\n              className='tutorial-stage tutorial-stage--overview'\r\n              key='tutorial-stage-overview'\r\n            >\r\n              <div className=\"tutorial-preview\">\r\n                <div className=\"tutorial-preview__section\">\r\n                  <span />\r\n                  <h6>{common.shortDescription}</h6>\r\n                </div>\r\n                <div className=\"tutorial-preview__section tutorial-preview__section--row tutorial-preview__schedule--container\">\r\n                  <div className=\"tutorial-preview__schedule\" title='Estimated tutorial duration time'>\r\n                    <Time16 className=\"tutorial-preview__icon\" />\r\n                    <p>{common.durationTime}.</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"tutorial-preview__section\">\r\n                  <p className=\"tutorial-preview__text\">{details.topicsName}</p>\r\n                  <UnorderedList className=\"tutorial-preview__list\">\r\n                    <TopicsListItems topics={details.topicList} />\r\n                  </UnorderedList>\r\n                </div>\r\n                <div className=\"tutorial-preview__section\">\r\n                  <p className=\"tutorial-preview__text\">{details.outcomesName}</p>\r\n                  <UnorderedList className=\"tutorial-preview__list\">\r\n                    <OutcomesListItems outcomes={details.outcomeList} />\r\n                  </UnorderedList>\r\n                </div>\r\n                <div className=\"tutorial-preview__section\">\r\n                  <p className=\"tutorial-preview__text-header\">\r\n                    {\r\n                      (summary && summary.overviewName) === 'OVERVIEW' ?\r\n                      'Details' : summary.overviewName\r\n                    }\r\n                  </p>\r\n                  {summary && summary.sections && summary.sections.map((item, index) => (\r\n                    <p key={`item-section:${index}`} className=\"tutorial-preview__text\">\r\n                      {item.section}\r\n                    </p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </AccordionItem>\r\n\r\n            {/*\r\n              Create Step\r\n            */}\r\n            <AccordionItem\r\n              title='Create'\r\n              className='tutorial-stage tutorial-stage--create'\r\n              key='tutorial-stage-create'\r\n              open\r\n            >\r\n            <div className=\"tutorial-preview\">\r\n              <div className=\"tutorial-preview__section tutorial-preview__section-inline\">\r\n                <h6 className='tutorial-preview__section-header'>{createStep.overview.heading}</h6>\r\n                {\r\n                  createStep && createStep.actions && createStep.actions.details && createStep.actions.details.map((detail, detailIndex) => (\r\n                    detail.method === 'importArtifacts()' && (\r\n                      <Button\r\n                        href='#'\r\n                        onClick={(e) => onImportArtifactClick(e, tutorialsData)}\r\n                        size='sm'\r\n                        key={`createStep-button:${detailIndex}`}\r\n                        renderIcon={Download16}\r\n                        className='tutorial-preview__section-button'\r\n                      >\r\n                        {detail.name}\r\n                      </Button>\r\n                    )\r\n                  ))\r\n                }\r\n              </div>\r\n              <div className=\"tutorial-preview__section\">\r\n                {createStep && createStep.overview && createStep.overview.sections && createStep.overview.sections.map((section, sectionIndex) => (\r\n                  <div key={`item-container:${sectionIndex}`}>\r\n                    <p key={`item-section:${sectionIndex}`} className=\"tutorial-preview__text\">\r\n                      {section && section.section && parse(section.section)}\r\n                    </p>\r\n                    {\r\n                      section.steps && section.steps.details && section.steps.details.map((detail, detailIndex) => (\r\n                        <p key={`item-section:${detailIndex}`} className=\"tutorial-preview__text\">\r\n                          {detail && detail.details && parse(detail.details)}\r\n                        </p>\r\n                      ))\r\n                    }\r\n                </div>\r\n                ))}\r\n              </div>\r\n              <br />\r\n              <div className=\"tutorial-preview__section\">\r\n                <h6 className='tutorial-preview__section-header'>{createStep?.helpLinks?.title}</h6>\r\n                {createStep && createStep.helpLinks && createStep.helpLinks.details && createStep.helpLinks.details.map((detail, detailIndex) => (\r\n                  <div key={`item-container-create-help:${detailIndex}`}>\r\n                    <Link\r\n                      key={`item-section-create-help:${detailIndex}`}\r\n                      href='#'\r\n                      onClick={(e) => onLinkClick(e, detail.link)}\r\n                    >\r\n                      {detail.description}\r\n                    </Link>\r\n                </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            </AccordionItem>\r\n\r\n            {/*\r\n              Prepare Step\r\n              onHeadingClick={(obj) => onAccordionClick(obj, 2)}\r\n            */}\r\n            <AccordionItem\r\n              title='Prepare'\r\n              className='tutorial-stage tutorial-stage--prepare'\r\n              key='tutorial-stage-prepare'\r\n            >\r\n            <div className=\"tutorial-preview\">\r\n              <div className=\"tutorial-preview__section tutorial-preview__section-inline\">\r\n                <h6 className='tutorial-preview__section-header'>{prepareStep.overview.heading}</h6>\r\n              </div>\r\n              <div className=\"tutorial-preview__section\">\r\n                {prepareStep && prepareStep.overview && prepareStep.overview.sections && prepareStep.overview.sections.map((section, sectionIndex) => (\r\n                  <div key={`item-container-prepare:${sectionIndex}`}>\r\n                    <p key={`item-section-prepare:${sectionIndex}`} className=\"tutorial-preview__text\">\r\n                      {section && section.section && parse(section.section)}\r\n                    </p>\r\n                    <OrderedList className='tutorial-preview__section--ordered-list'>\r\n                      {\r\n                        section.steps && section.steps.details && section.steps.details.map((detail, detailIndex) => (\r\n                          <ListItem\r\n                            key={`item-section-prepare:${detailIndex}`}\r\n                            className='tutorial-preview__section--list'\r\n                          >\r\n                            {detail && detail.details && parse(detail.details)}\r\n                            {\r\n                              detail && detail.substeps && detail.substeps.details.map((substep, substepIndex) => (\r\n                                <ListItem\r\n                                  key={`item-section-prepare:${substepIndex}`}\r\n                                  className='tutorial-preview__section--list tutorial-preview__section--list-substep'\r\n                                >\r\n                                {substep.details && parse(substep.details)}\r\n                                </ListItem>\r\n                              ))\r\n                            }\r\n                          </ListItem>\r\n                        ))\r\n                      }\r\n                    </OrderedList>\r\n                </div>\r\n                ))}\r\n              </div>\r\n              <br />\r\n              <div className=\"tutorial-preview__section\">\r\n                <h6 className='tutorial-preview__section-header'>{prepareStep?.helpLinks?.title}</h6>\r\n                {prepareStep && prepareStep.helpLinks && prepareStep.helpLinks.details && prepareStep.helpLinks.details.map((detail, detailIndex) => (\r\n                  <div key={`item-container-prepare-help:${detailIndex}`}>\r\n                    <Link\r\n                      key={`item-section-prepare-help:${detailIndex}`}\r\n                      href='#'\r\n                      onClick={(e) => onLinkClick(e, detail.link)}\r\n                    >\r\n                      {detail.description}\r\n                    </Link>\r\n                </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            </AccordionItem>\r\n\r\n            {/*\r\n              Run Step\r\n            */}\r\n            <AccordionItem\r\n              title='Run'\r\n              className='tutorial-stage tutorial-stage--run'\r\n              key='tutorial-stage-run'\r\n            >\r\n              <div className=\"tutorial-preview\">\r\n                <div className=\"tutorial-preview__section tutorial-preview__section-inline\">\r\n                  <h6 className='tutorial-preview__section-header'>{runStep.overview.heading}</h6>\r\n                </div>\r\n                <div className=\"tutorial-preview__section\">\r\n                  {runStep && runStep.overview && runStep.overview.sections && runStep.overview.sections.map((section, sectionIndex) => (\r\n                    <div key={`item-container-run:${sectionIndex}`}>\r\n                      <p key={`item-section-run:${sectionIndex}`} className=\"tutorial-preview__text\">\r\n                        {section && section.section && parse(section.section)}\r\n                      </p>\r\n                      <OrderedList className='tutorial-preview__section--ordered-list'>\r\n                        {\r\n                          section.steps && section.steps.details && section.steps.details.map((detail, detailIndex) => (\r\n                            <ListItem\r\n                              key={`item-section-run-detail:${detailIndex}`}\r\n                              className='tutorial-preview__section--list'\r\n                            >\r\n                              {detail && detail.details && parse(detail.details)}\r\n                              {\r\n                                detail && detail.substeps && detail.substeps.details.map((substep, substepIndex) => (\r\n                                  <ListItem\r\n                                    key={`item-section-run:${substepIndex}`}\r\n                                    className='tutorial-preview__section--list tutorial-preview__section--list-substep'\r\n                                  >\r\n                                    {substep.details && parse(substep.details)}\r\n                                  </ListItem>\r\n                                ))\r\n                              }\r\n                            </ListItem>\r\n                          ))\r\n                        }\r\n                      </OrderedList>\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n                <br />\r\n                <div className=\"tutorial-preview__section\">\r\n                  <h6 className='tutorial-preview__section-header'>{runStep?.helpLinks?.title}</h6>\r\n                  {runStep && runStep.helpLinks && runStep.helpLinks.details && runStep.helpLinks.details.map((detail, detailIndex) => (\r\n                    <div key={`item-container-run-help:${detailIndex}`}>\r\n                      <Link\r\n                        key={`item-section-run-help:${detailIndex}`}\r\n                        href='#'\r\n                        onClick={(e) => onLinkClick(e, detail.link)}\r\n                      >\r\n                        {detail.description}\r\n                      </Link>\r\n                  </div>\r\n                  ))}\r\n                </div>\r\n                {\r\n                  runStep && runStep.exits && runStep.exits.details && runStep.exits.details.length && (\r\n                    <div className=\"tutorial-preview__section\">\r\n                      {\r\n                        runStep && runStep.exits && runStep.exits.details && runStep.exits.details.map((detail, detailIndex) => (\r\n                          <div key={`item-container-run-exit:${detailIndex}`}>\r\n                            <h6 className='tutorial-preview__section-header'>\r\n                              {detail.cleanupDescription || detail.description}\r\n                            </h6>\r\n                            {\r\n                              detail.method === 'cleanUp()' && (\r\n                                <Button\r\n                                  kind='danger--tertiary'\r\n                                  key={`item-section-run-exit:${detailIndex}`}\r\n                                  onClick={(e) => onCleanUpClick(e)}\r\n                                  renderIcon={TrashCan16}\r\n                                  iconDescription={detail.cleanupDescription || detail.description}\r\n                                  size='sm'\r\n                                  className='tutorial-preview__section-button'\r\n                                >\r\n                                  {detail.name}\r\n                                </Button>\r\n                              )\r\n                            }\r\n                          </div>\r\n                        ))\r\n                      }\r\n                    </div>\r\n                  )\r\n                }\r\n              </div>\r\n            </AccordionItem>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return ''\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './App.scss'\r\n\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport { TutorialsPage } from './Page/TutorialsPage'\r\nimport { WelcomePage } from './Page/WelcomePage'\r\nimport { TutorialPage } from './Page/TutorialPage'\r\n\r\nfunction App () {\r\n  return (\r\n    <div className='App toolkit-prototype'>\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route key={'route-tutorials-page'} exact path={'/tutorials'} component={TutorialsPage} />\r\n          <Route key={'route-welcome-page'} exact path={'/welcome'} component={WelcomePage} />\r\n          <Route key={'route-tutorial-page'} path={'/tutorials/:tutorial'} component={TutorialPage} />\r\n          <Redirect exact from={'/'} to={'/welcome'} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This must be the first line in src/index.js\r\nimport 'react-app-polyfill/ie9'\r\nimport 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport 'core-js/stable'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}